@model VKTracker.Model.ViewModel.StockManagementViewModel
@{
    ViewBag.Title = "Stock Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var distributionModel = new VKTracker.Model.ViewModel.DistributionViewModel();
}

@Html.Partial("~/Views/Shared/_BreadCrum.cshtml")

<div class="card">
    <div class="card-header d-flex align-items-center">
        <div class="card-title mb-0 flex-grow-1" id="stockManagementHeader"></div>
        @*<div>
            <button class="btn btn-primary btn-label waves-effect waves-light" data-bs-toggle="modal" id="btnStockManageAddModal" data-bs-target="#stockManageAddModal">
                <i class="ri-add-circle-line label-icon align-middle fs-16 me-2"></i> Add Stock
            </button>
        </div>*@
        <div>
            <button class="btn btn-primary btn-label waves-effect waves-light" data-bs-toggle="modal" id="btnStockManageNewAddModal" data-bs-target="#stockManageNewAddModal">
                <i class="ri-add-circle-line label-icon align-middle fs-16 me-2"></i> Add Stock
            </button>
        </div>
    </div>
    <div class="card-body">
        <form id="frmSearch" name="frmSearch">
            <div class="row mb-4 d-flex">
                <div class="col-2">
                    <label for="projectName-field" class="form-label">Stock Code</label>
                    @Html.DropDownListFor(m => m.StockCodeId, (SelectList)ViewBag.StockCodeDDL, "Select Code", new { @class = "form-select select2" })
                </div>
                <div class="col-2">
                    <label for="projectName-field" class="form-label">Fabric</label>
                    @Html.DropDownListFor(m => m.FabricId, (SelectList)ViewBag.FabricDDL, "Select Fabric", new { @class = "form-select select2" })
                </div>
                <div class="col-3">
                    <label for="projectName-field" class="form-label">Item Type</label>
                    @Html.DropDownListFor(m => m.ItemTypeId, (SelectList)ViewBag.ItemDDl, "Select Item", new { @class = "form-select select2" })
                </div>
                <div class="col-2">
                    <label for="projectName-field" class="form-label">A Quantity</label>
                    @Html.TextBoxFor(m => m.AvailableQuantity, new { @class = "form-control", @placeholder = "A Quantity" })
                </div>
                <div class="col-3">
                    <label for="projectName-field" class="form-label">Location</label>
                    @Html.DropDownListFor(m => m.LocationId, (SelectList)ViewBag.LocationDDL, "Select Location", new { @class = "form-select select2" })
                </div>
                <div class="col-3">
                    <label for="projectName-field" class="form-label">Stock Id @*Stock No*@ </label>
                    @Html.TextBoxFor(m => m.StockNo, new { @class = "form-control", @placeholder = "Stock Id" })
                </div>
                <div class="col-2">
                    <label for="projectName-field" class="form-label">From Date</label>
                    @Html.TextBoxFor(m => m.FromDate, new Dictionary<string, object> { { "data-provider", "flatpickr" }, { "data-date-format", "d-M-Y" }, { "class", "form-control" }, { "placeholder", "dd-mm-yyyy" } })
                    @Html.ValidationMessageFor(x => x.FromDate, "", new { @class = "text-danger" })
                </div>
                <div class="col-2">
                    <label for="projectName-field" class="form-label">To Date</label>
                    @Html.TextBoxFor(m => m.ToDate, new Dictionary<string, object> { { "data-provider", "flatpickr" }, { "data-date-format", "d-M-Y" }, { "class", "form-control" }, { "placeholder", "dd-mm-yyyy" } })
                    @Html.ValidationMessageFor(x => x.ToDate, "", new { @class = "text-danger" })
                </div>
                <div class="col-1 mt-4">
                    <button type="button" class="btn btn-success btn-label waves-effect waves-light" id="btnSearch">
                        <i class="ri-search-line label-icon align-middle fs-16 me-2"></i>Search
                    </button>
                </div>
            </div>
        </form>
        <table id="gridStockManagement" class="display table caption-top table-nowrap" style="width:100%">
            <thead class="table-light">
                <tr>
                    <th>Select</th>
                    <th>Than Id</th>
                    <th>Parcel Code</th>
                    <th>Stock Code</th>
                    <th>Fabric Type</th>
                    <th>Item Type</th>
                    <th>Current Location</th>
                    <th>Total Quantity</th>
                    <th>Available Quantity</th>
                    <th>Modified By</th>
                    <th>Modified Date</th>
                    <th>Action</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div class="modal fade zoomIn" id="stockManageAddModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0">
            <div class="modal-header p-3 bg-soft-info">
                <h5 class="modal-title" id="exampleModalLabel">Stock Add / Edit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <form id="stockManageAddForm" name="stockManageAddForm" method="post">
                <div class="modal-body">
                    <div id="mainChild_1">
                        <div class="row g-3">
                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Parcel Code</label>
                                @Html.HiddenFor(x => x.Id, new { @id = "Id_0" })
                                @Html.DropDownListFor(m => m.ParcelId, (SelectList)ViewBag.ParcelDDL, new { @class = "form-select select2", @id = "ParcelId_0" })
                                @Html.ValidationMessageFor(x => x.ParcelId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Stock Code</label>
                                @Html.DropDownListFor(m => m.StockCodeId, (SelectList)ViewBag.StockCodeDDL, new { @class = "form-select select2", @id = "StockCodeId_0" })
                                @Html.ValidationMessageFor(x => x.StockCodeId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Fabric</label>
                                @Html.DropDownListFor(m => m.FabricId, (SelectList)ViewBag.FabricDDl, new { @class = "form-select select2", @id = "FabricId_0" })
                                @Html.ValidationMessageFor(x => x.FabricId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Item</label>
                                @Html.DropDownListFor(m => m.ItemId, (SelectList)ViewBag.ItemDDl, new { @class = "form-select select2", @id = "ItemId_0" })
                                @Html.ValidationMessageFor(x => x.ItemId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Location</label>
                                @Html.DropDownListFor(m => m.LocationId, (SelectList)ViewBag.LocationDDl, new { @class = "form-select select2", @id = "LocationId_0" })
                                @Html.ValidationMessageFor(x => x.LocationId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Total Quantity</label>
                                @Html.TextBoxFor(x => x.TotalQuantity, new { @class = "form-control", @placeHolder = "Total Quantity", @maxLength = "100", @id = "TotalQuantity_0" })
                                @Html.ValidationMessageFor(x => x.TotalQuantity, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3" id="Thandiv_0">
                                <label for="projectName-field" class="form-label">Total Than</label>
                                @Html.TextBoxFor(x => x.ThanNo, new { @class = "form-control", @type = "number", @placeHolder = "Than No", @maxLength = "100", @id = "ThanNo_0" })
                                @Html.ValidationMessageFor(x => x.ThanNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div id="MainParent">

                    </div>

                </div>
                <div class="modal-footer">
                    <div class="hstack gap-2 justify-content-end">
                        <button type="button" class="btn btn-light" id="close-modal" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="addStockManage">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade zoomIn" id="stockManageEditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0">
            <div class="modal-header p-3 bg-soft-info">
                <h5 class="modal-title" id="exampleModalLabel">Stock Add / Edit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <form id="stockManageEditForm" name="stockManageEditForm" method="post">
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-lg-6">
                            <label for="projectName-field" class="form-label">Parcel Code</label>
                            @Html.HiddenFor(x => x.Id);
                            @Html.DropDownListFor(m => m.ParcelId, (SelectList)ViewBag.ParcelDDL, new { @class = "form-select select2" })
                            @Html.ValidationMessageFor(x => x.ParcelId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-6">
                            <label for="projectName-field" class="form-label">Stock Code</label>
                            @Html.DropDownListFor(m => m.StockCodeId, (SelectList)ViewBag.StockCodeDDL, new { @class = "form-select select2" })
                            @Html.ValidationMessageFor(x => x.StockCodeId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-6">
                            <label for="projectName-field" class="form-label">Fabric</label>
                            @Html.DropDownListFor(m => m.FabricId, (SelectList)ViewBag.FabricDDl, new { @class = "form-select select2" })
                            @Html.ValidationMessageFor(x => x.FabricId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-6">
                            <label for="projectName-field" class="form-label">Item</label>
                            @Html.DropDownListFor(m => m.ItemId, (SelectList)ViewBag.ItemDDl, new { @class = "form-select select2" })
                            @Html.ValidationMessageFor(x => x.ItemId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-6">
                            <label for="projectName-field" class="form-label">Location</label>
                            @Html.DropDownListFor(m => m.LocationId, (SelectList)ViewBag.LocationDDl, new { @class = "form-select select2" })
                            @Html.ValidationMessageFor(x => x.LocationId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-6">
                            <label for="projectName-field" class="form-label">Total Quantity</label>
                            @Html.TextBoxFor(x => x.TotalQuantity, new { @class = "form-control", @placeHolder = "Total Quantity", @maxLength = "100" })
                            @Html.ValidationMessageFor(x => x.TotalQuantity, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <div class="hstack gap-2 justify-content-end">
                        <button type="button" class="btn btn-light" id="close-modal" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="editStockManage">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade zoomIn" id="stockManagementLogModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content border-0">
            <div class="modal-header p-3 bg-soft-info">
                <h5 class="modal-title" id="exampleModalLabel">Stock Management History Logs</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <div class="modal-body">
                <table id="gridStockManagementLog" class="display table caption-top table-nowrap" style="width:100%">
                    <thead class="table-light">
                        <tr>
                            <th>Action</th>
                            <th>Parcel code</th>
                            <th>Stock Code</th>
                            <th>Fabric Type</th>
                            <th>Item Type</th>
                            <th>Current Location</th>
                            <th>Total Quantity</th>
                            <th>Created By</th>
                            <th>Created Date</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div class="modal-footer">
                <div class="hstack gap-2 justify-content-end">
                    <button type="button" class="btn btn-light" id="close-modal" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade zoomIn" id="transferLocationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-m">
        <div class="modal-content border-0">
            <div class="modal-header p-3 bg-soft-info">
                <h5 class="modal-title" id="exampleModalLabel">Transfer Location</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <form id="transferLocationModalForm" name="transferLocationModalForm" method="post">
                <div class="modal-body">
                    <div id="mainChild_1">
                        <div class="row g-3">
                            <div class="col-lg-12">
                                <label for="projectName-field" class="form-label">Location</label>
                                @Html.DropDownListFor(m => m.LocationId, (SelectList)ViewBag.LocationDDl, new { @class = "form-select select2" })
                                @Html.ValidationMessageFor(x => x.LocationId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="hstack gap-2 justify-content-end">
                        <button type="button" class="btn btn-light" id="close-modal" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="addTransferLocation">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>



<div class="modal fade zoomIn" id="stockManageNewAddModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen">
        <div class="modal-content border-0">
            <div class="modal-header p-3 bg-soft-info">
                <h5 class="modal-title" id="exampleModalLabel">Stock New Add / Edit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <form id="stockManageNewAddForm" name="stockManageNewAddForm" method="post">
                <div class="modal-body">
                    <div id="mainNewChild_1">
                        <div class="row g-3">
                            <div class="col-lg-3">
                                <label for="projectName-field" class="form-label">Parcel Code</label>
                                @Html.HiddenFor(x => x.Id, new { @id = "Id_0" })
                                @Html.DropDownListFor(m => m.ParcelId, (SelectList)ViewBag.ParcelDDL, new { @class = "form-select", @id = "ParcelIdNew_0" })
                                @Html.ValidationMessageFor(x => x.ParcelId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3" id="Thandiv_0">
                                <label for="projectName-field" class="form-label">Total Items</label>
                                @Html.TextBoxFor(x => x.ThanNo, new { @class = "form-control", @type = "number", @placeHolder = "Total Items", @maxLength = "2", @id = "ThanNoNew_0" })
                                @Html.ValidationMessageFor(x => x.ThanNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <table id="MainNewParent" class="table table-responsive">
                    </table>
                    <div hidden="hidden">
                        <table id="ChildTableTH" class="table table-responsive">
                            <tr>
                                <th class="col-1">Stock Code</th>
                                <th class="col-1">Fabric</th>
                                <th class="col-1">Item</th>
                                <th class="col-1">Location</th>
                                <th class="col-1">Than Quantity</th>
                            </tr>
                        </table>
                        <table id="ChildTableTD">
                            <tr id="ChildTableTDTR_0">
                                <td>
                                    @Html.DropDownListFor(m => m.StockCodeId, (SelectList)ViewBag.StockCodeDDL, new { @class = "form-select select2", @id = "StockCodeIdNew_0" })
                                    @Html.ValidationMessageFor(x => x.StockCodeId, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.FabricId, (SelectList)ViewBag.FabricDDl, new { @class = "form-select select2", @id = "FabricIdNew_0" })
                                    @Html.ValidationMessageFor(x => x.FabricId, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.ItemId, (SelectList)ViewBag.ItemDDl, new { @class = "form-select select2", @id = "ItemIdNew_0" })
                                    @Html.ValidationMessageFor(x => x.ItemId, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.LocationId, (SelectList)ViewBag.LocationDDl, new { @class = "form-select select2", @id = "LocationIdNew_0" })
                                    @Html.ValidationMessageFor(x => x.LocationId, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(x => x.TotalQuantity, new {@class = "form-control", @placeHolder = "Total Quantity", @maxLength = "2",@type="number", @id = "TotalQuantityNew_0", @text = "", @onblur = "addThanQuantity(this)" })
                                    @Html.ValidationMessageFor(x => x.TotalQuantity, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </table>
                    </div>

                </div>
                <div class="modal-footer">
                    <div class="hstack gap-2 justify-content-end">
                        <button type="button" class="btn btn-light" id="close-modal" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="addStockNewManage">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>






@Html.Partial("~/Views/Distribution/_DistributionPartial.cshtml", distributionModel)




@section scripts
{
    <script src="~/Scripts/custom/stockManagementDataTable.js"></script>

    <script>
        $(function () {
            $('#gridStockManagement').DataTable().destroy();
            bindStockManagement();
        });


    </script>
}